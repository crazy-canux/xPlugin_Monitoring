# This is an ini file for check_wmi_plus.pl - nagios plugin for agentless checking of Windows
#
# Copyright (C) 2012 Canux CHENG
#

[ini]
# information about the ini file
author=Monitoring and Reporting
# ini file version
version=1.50

#----------------------------------------------------------
[check_file_count_size]
requires=1.50
inihelp=<<EOT
Check number of files in a directory and see the size for each files
This check count the number of files in a directory. Alert on thresholds if
defined. Is in INFO mode when no thresholds are specified.

ARG1 Drive letter (eg. "c:").
ARG2 Directory path (eg. "/my/super/directory/"). Keep the trailing slash !

This will count files in "c:\my\super\directory" folder. Use -w and -c to
specify thresholds.
EOT

slashconversion=1
processallrows=1

query=SELECT FileName,FileSize FROM CIM_Datafile WHERE (Drive = "{_arg1}" AND Path = "{_arg2}")
test=_ItemCount
predisplay=_DisplayMsg||~|~| - ||
predisplay=_ItemCount||~|~|~|Found | file(s) in {_arg1}{_arg2}\n
display=FileName||~|~| |File: |
display=FileSize||~|~|\n|Size: |

perf=_ItemCount||num_files

#----------------------------------------------------------
[check_file_count]
requires=1.50
inihelp=<<EOT
Check number of files in a directory.
This check count the number of files in a directory. Alert on thresholds if
defined. Is in INFO mode when no thresholds are specified. 

ARG1    Drive letter (eg. "c:").
ARG2    Directory path (eg. "/my/super/directory/"). Keep the trailing slash !

This will count files in "c:\my\super\directory" folder. Use -w and -c to
specify thresholds.
EOT

slashconversion=1
processallrows=1

query=SELECT FileName FROM CIM_Datafile WHERE (Drive = "{_arg1}" AND Path = "{_arg2}")
test=_ItemCount
predisplay=_DisplayMsg||~|~| - ||
predisplay=_ItemCount||~|~|~|Found | file(s) in {_arg1}{_arg2}\n

perf=_ItemCount||num_files


#----------------------------------------------------------
[check_diskio]
requires=1.50
inihelp=<<EOT
Check logical disk IO. 
These disks checks use WMI Raw counters to calculate values over a given timeperiod. 
This is much more accurate than taking Formatted WMI values.
Note that some of the PercentDisk values seem to give incorrect values. Use with caution.
This check can return data for multiple drives in a single check.
ARG1  Name of the logical Windows drive to check eg C:. Use % for Wilcard.
   Use _Total to check all drives combined.
   
EOT

# select only one row specific to the disk we are interested in
query=SELECT * FROM Win32_PerfRawData_PerfDisk_LogicalDisk WHERE Name LIKE "{_arg1}"

# run 2 WMI queries, 5 seconds apart. The delay only applies if using --nokeepstate
samples=2
delay=5

customfield=_IdleTime,PERF_PRECISION_100NS_TIMER,PercentIdleTime,%.0f,100
customfield=_BusyTime,PERF_PRECISION_100NS_TIMER,PercentIdleTime,%.0f,100,100
customfield=_DiskReadTime,PERF_PRECISION_100NS_TIMER,PercentDiskReadTime,%.0f,100
customfield=_DiskWriteTime,PERF_PRECISION_100NS_TIMER,PercentDiskWriteTime,%.0f,100

test=_IdleTime
test=_BusyTime
test=_DiskReadTime
test=_DiskWriteTime

# will show the overall status
predisplay=_DisplayMsg||Status - |~| -||

# will show the status of each item returned
display=Name|| Logical Drive Name|="| ||"
display=_DisplayMsg||~|~| - |(|)
display=_IdleTime|%
display=_BusyTime|%
display=_DiskReadTime|%
display=_DiskWriteTime|%

# since this check can return multiple rows at a time (it uses LIKE and % in the WMI query)
# need to include the {Name} so that performance data is unique to each instance
perf=_IdleTime||_IdleTime{Name}
perf=_BusyTime||_BusyTime{Name}
perf=_DiskReadTime||_DiskReadTime{Name}
perf=_DiskWriteTime||_DiskWriteTime{Name}

