#!/bin/sh
#===============================================================================
# Name          : check_nfs
# Author        : Canux CHENG aka 'v!nZ' <canuxcheng@gmail.com>
# Version       : $Revision: 60 $
# Last Modified : $Date: 2011-11-22 16:37:55 +0100 (mar., 22 nov. 2011) $
# License       : Creative Commons Attribution-Noncommercial-Share Alike 2.0 France
# Description   : Check a NFS mount point by looking for presence of a file.
#-------------------------------------------------------------------------------
# This work is licensed under the
# Creative Commons Attribution-Noncommercial-Share Alike 2.0 France License.
# To view a copy of this license, visit
# http://creativecommons.org/licenses/by-nc-sa/2.0/fr/ or send a letter to
#
# Creative Commons
# 171 Second Street, Suite 300
# San Francisco, California
# 94105, USA.
#===============================================================================

# Program
PROGNAME=`basename $0`
#ECHO='/usr/bin/echo'
ECHO='/bin/echo'

# Functions
show_help () {
  $ECHO "canux -- Nagios Plugins"
  $ECHO "--------------------------"
  $ECHO
  $ECHO "Name: $PROGNAME"
  $ECHO "Author: Canux CHENG <canuxcheng@gmail.com>"
  $ECHO "Description: Check a NFS mount point by looking for presence of a file."
  $ECHO
  $ECHO "Usage: $PROGNAME [-h] -p <nfs_path>"
  $ECHO
  $ECHO "Options:"
  $ECHO "\t-h\tShow help."
  $ECHO "\t-p\tNFS path to check (directory). It will look for the presence of file 'monitoring_nfs' inside. If found, it will return OK. If
not, it will return CRITICAL."
  $ECHO "\t-f\tName of the file to check. By default: 'monitoring_nfs'."
}

# Arguments processing
while getopts :hf:p: argument
do
  case $argument in
    h) show_help ; exit 3 ;;
    p) NFSPATH=$OPTARG ;;
    f) FLAG=$OPTARG ;;
    :) $ECHO "UNKNOWN - Syntax error: specify what to check with option -$OPTARG !" ; exit 3 ;;
    \?) $ECHO "UNKNOWN - Syntax error: check plugin help !" ; exit 3 ;;
  esac
done

# Sanity checks
if [ -z $FLAG ]; then
  FLAG='monitoring_nfs'
fi

if [ -z $NFSPATH ]; then
  $ECHO "WARNING - Missing path information ! Use option -p."
  exit 1
fi

if [ ! -d $NFSPATH ]; then
  $ECHO "WARNING - Path '$NFSPATH' is not correct ! Must be a directory."
  exit 1
fi

# Processing check
CMD=`ls $NFSPATH/$FLAG 2>&1 >/dev/null`
RET=$?

if [ $RET -eq 0 ]; then
  $ECHO "OK - NFS share '$NFSPATH' is accessible."
  exit 0
else
  $ECHO "CRITICAL - NFS share '$NFSPATH' is not accessible !"
  exit 2
fi
